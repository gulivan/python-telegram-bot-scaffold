version: '3.8'

services:
  db:
    image: postgres:16
    container_name: tg_bot_db
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_SCHEMA}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_SCHEMA}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build: 
      context: .
      target: base
    command: >
      sh -c "
        echo 'Waiting for database to be ready...'
        sleep 5
        echo 'Running migrations...'
        alembic upgrade head
      "
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - TIMEZONE=${TIMEZONE}
    depends_on:
      db:
        condition: service_healthy

  app:
    build: 
      context: .
      target: base
    command: python -m bot
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TIMEZONE=${TIMEZONE}
    depends_on:
      - migrate

volumes:
  postgres_data:
